// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: btrdb.proto

package v5api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MergePolicy int32

const (
	MergePolicy_NEVER   MergePolicy = 0 // Never merge
	MergePolicy_EQUAL   MergePolicy = 1 // Merge identical (key, value) pairs
	MergePolicy_RETAIN  MergePolicy = 2 // When timestamps are equal, keep old value
	MergePolicy_REPLACE MergePolicy = 3 // When timestamps are equal, keep new value
)

// Enum value maps for MergePolicy.
var (
	MergePolicy_name = map[int32]string{
		0: "NEVER",
		1: "EQUAL",
		2: "RETAIN",
		3: "REPLACE",
	}
	MergePolicy_value = map[string]int32{
		"NEVER":   0,
		"EQUAL":   1,
		"RETAIN":  2,
		"REPLACE": 3,
	}
)

func (x MergePolicy) Enum() *MergePolicy {
	p := new(MergePolicy)
	*p = x
	return p
}

func (x MergePolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MergePolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_btrdb_proto_enumTypes[0].Descriptor()
}

func (MergePolicy) Type() protoreflect.EnumType {
	return &file_btrdb_proto_enumTypes[0]
}

func (x MergePolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MergePolicy.Descriptor instead.
func (MergePolicy) EnumDescriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{0}
}

type GenerateCSVParams_QueryType int32

const (
	GenerateCSVParams_ALIGNED_WINDOWS_QUERY GenerateCSVParams_QueryType = 0
	GenerateCSVParams_WINDOWS_QUERY         GenerateCSVParams_QueryType = 1
	GenerateCSVParams_RAW_QUERY             GenerateCSVParams_QueryType = 2
)

// Enum value maps for GenerateCSVParams_QueryType.
var (
	GenerateCSVParams_QueryType_name = map[int32]string{
		0: "ALIGNED_WINDOWS_QUERY",
		1: "WINDOWS_QUERY",
		2: "RAW_QUERY",
	}
	GenerateCSVParams_QueryType_value = map[string]int32{
		"ALIGNED_WINDOWS_QUERY": 0,
		"WINDOWS_QUERY":         1,
		"RAW_QUERY":             2,
	}
)

func (x GenerateCSVParams_QueryType) Enum() *GenerateCSVParams_QueryType {
	p := new(GenerateCSVParams_QueryType)
	*p = x
	return p
}

func (x GenerateCSVParams_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateCSVParams_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_btrdb_proto_enumTypes[1].Descriptor()
}

func (GenerateCSVParams_QueryType) Type() protoreflect.EnumType {
	return &file_btrdb_proto_enumTypes[1]
}

func (x GenerateCSVParams_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateCSVParams_QueryType.Descriptor instead.
func (GenerateCSVParams_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{53, 0}
}

type RawValuesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Start        int64  `protobuf:"fixed64,2,opt,name=start,proto3" json:"start,omitempty"`
	End          int64  `protobuf:"fixed64,3,opt,name=end,proto3" json:"end,omitempty"`
	VersionMajor uint64 `protobuf:"varint,4,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
}

func (x *RawValuesParams) Reset() {
	*x = RawValuesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawValuesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawValuesParams) ProtoMessage() {}

func (x *RawValuesParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawValuesParams.ProtoReflect.Descriptor instead.
func (*RawValuesParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{0}
}

func (x *RawValuesParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *RawValuesParams) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *RawValuesParams) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *RawValuesParams) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

type RawValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status     `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64      `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64      `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
	Values       []*RawPoint `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *RawValuesResponse) Reset() {
	*x = RawValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawValuesResponse) ProtoMessage() {}

func (x *RawValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawValuesResponse.ProtoReflect.Descriptor instead.
func (*RawValuesResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{1}
}

func (x *RawValuesResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *RawValuesResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *RawValuesResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

func (x *RawValuesResponse) GetValues() []*RawPoint {
	if x != nil {
		return x.Values
	}
	return nil
}

type MultiRawValuesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         [][]byte `protobuf:"bytes,1,rep,name=uuid,proto3" json:"uuid,omitempty"`
	Start        int64    `protobuf:"fixed64,2,opt,name=start,proto3" json:"start,omitempty"`
	End          int64    `protobuf:"fixed64,3,opt,name=end,proto3" json:"end,omitempty"`
	VersionMajor uint64   `protobuf:"varint,4,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	PeriodNs     int64    `protobuf:"varint,5,opt,name=periodNs,proto3" json:"periodNs,omitempty"`
}

func (x *MultiRawValuesParams) Reset() {
	*x = MultiRawValuesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiRawValuesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiRawValuesParams) ProtoMessage() {}

func (x *MultiRawValuesParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiRawValuesParams.ProtoReflect.Descriptor instead.
func (*MultiRawValuesParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{2}
}

func (x *MultiRawValuesParams) GetUuid() [][]byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *MultiRawValuesParams) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *MultiRawValuesParams) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *MultiRawValuesParams) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *MultiRawValuesParams) GetPeriodNs() int64 {
	if x != nil {
		return x.PeriodNs
	}
	return 0
}

type MultiRawValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status        `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor []uint64       `protobuf:"varint,2,rep,packed,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor []uint64       `protobuf:"varint,3,rep,packed,name=versionMinor,proto3" json:"versionMinor,omitempty"`
	Values       []*RawPointVec `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *MultiRawValuesResponse) Reset() {
	*x = MultiRawValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiRawValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiRawValuesResponse) ProtoMessage() {}

func (x *MultiRawValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiRawValuesResponse.ProtoReflect.Descriptor instead.
func (*MultiRawValuesResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{3}
}

func (x *MultiRawValuesResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *MultiRawValuesResponse) GetVersionMajor() []uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return nil
}

func (x *MultiRawValuesResponse) GetVersionMinor() []uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return nil
}

func (x *MultiRawValuesResponse) GetValues() []*RawPointVec {
	if x != nil {
		return x.Values
	}
	return nil
}

type RawPointVec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int64     `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	Value []float64 `protobuf:"fixed64,2,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *RawPointVec) Reset() {
	*x = RawPointVec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawPointVec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawPointVec) ProtoMessage() {}

func (x *RawPointVec) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawPointVec.ProtoReflect.Descriptor instead.
func (*RawPointVec) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{4}
}

func (x *RawPointVec) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RawPointVec) GetValue() []float64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type AlignedWindowsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Start        int64  `protobuf:"fixed64,2,opt,name=start,proto3" json:"start,omitempty"`
	End          int64  `protobuf:"fixed64,3,opt,name=end,proto3" json:"end,omitempty"`
	VersionMajor uint64 `protobuf:"varint,4,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	PointWidth   uint32 `protobuf:"varint,5,opt,name=pointWidth,proto3" json:"pointWidth,omitempty"`
}

func (x *AlignedWindowsParams) Reset() {
	*x = AlignedWindowsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlignedWindowsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlignedWindowsParams) ProtoMessage() {}

func (x *AlignedWindowsParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlignedWindowsParams.ProtoReflect.Descriptor instead.
func (*AlignedWindowsParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{5}
}

func (x *AlignedWindowsParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *AlignedWindowsParams) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *AlignedWindowsParams) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *AlignedWindowsParams) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *AlignedWindowsParams) GetPointWidth() uint32 {
	if x != nil {
		return x.PointWidth
	}
	return 0
}

type AlignedWindowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status      `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64       `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64       `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
	Values       []*StatPoint `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AlignedWindowsResponse) Reset() {
	*x = AlignedWindowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlignedWindowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlignedWindowsResponse) ProtoMessage() {}

func (x *AlignedWindowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlignedWindowsResponse.ProtoReflect.Descriptor instead.
func (*AlignedWindowsResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{6}
}

func (x *AlignedWindowsResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *AlignedWindowsResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *AlignedWindowsResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

func (x *AlignedWindowsResponse) GetValues() []*StatPoint {
	if x != nil {
		return x.Values
	}
	return nil
}

type WindowsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Start        int64  `protobuf:"fixed64,2,opt,name=start,proto3" json:"start,omitempty"`
	End          int64  `protobuf:"fixed64,3,opt,name=end,proto3" json:"end,omitempty"`
	VersionMajor uint64 `protobuf:"varint,4,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	Width        uint64 `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Depth        uint32 `protobuf:"varint,6,opt,name=depth,proto3" json:"depth,omitempty"`
}

func (x *WindowsParams) Reset() {
	*x = WindowsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindowsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowsParams) ProtoMessage() {}

func (x *WindowsParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowsParams.ProtoReflect.Descriptor instead.
func (*WindowsParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{7}
}

func (x *WindowsParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *WindowsParams) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *WindowsParams) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *WindowsParams) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *WindowsParams) GetWidth() uint64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *WindowsParams) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type WindowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status      `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64       `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64       `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
	Values       []*StatPoint `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *WindowsResponse) Reset() {
	*x = WindowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowsResponse) ProtoMessage() {}

func (x *WindowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowsResponse.ProtoReflect.Descriptor instead.
func (*WindowsResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{8}
}

func (x *WindowsResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *WindowsResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *WindowsResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

func (x *WindowsResponse) GetValues() []*StatPoint {
	if x != nil {
		return x.Values
	}
	return nil
}

type StreamInfoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OmitVersion    bool   `protobuf:"varint,2,opt,name=omitVersion,proto3" json:"omitVersion,omitempty"`
	OmitDescriptor bool   `protobuf:"varint,3,opt,name=omitDescriptor,proto3" json:"omitDescriptor,omitempty"`
	Role           *Role  `protobuf:"bytes,100,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *StreamInfoParams) Reset() {
	*x = StreamInfoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamInfoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInfoParams) ProtoMessage() {}

func (x *StreamInfoParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInfoParams.ProtoReflect.Descriptor instead.
func (*StreamInfoParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{9}
}

func (x *StreamInfoParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *StreamInfoParams) GetOmitVersion() bool {
	if x != nil {
		return x.OmitVersion
	}
	return false
}

func (x *StreamInfoParams) GetOmitDescriptor() bool {
	if x != nil {
		return x.OmitDescriptor
	}
	return false
}

func (x *StreamInfoParams) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type StreamInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status           `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64            `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64            `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
	Descriptor_  *StreamDescriptor `protobuf:"bytes,4,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *StreamInfoResponse) Reset() {
	*x = StreamInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInfoResponse) ProtoMessage() {}

func (x *StreamInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInfoResponse.ProtoReflect.Descriptor instead.
func (*StreamInfoResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{10}
}

func (x *StreamInfoResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *StreamInfoResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *StreamInfoResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

func (x *StreamInfoResponse) GetDescriptor_() *StreamDescriptor {
	if x != nil {
		return x.Descriptor_
	}
	return nil
}

type StreamDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            []byte         `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Collection      string         `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Tags            []*KeyOptValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Annotations     []*KeyOptValue `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty"`
	PropertyVersion uint64         `protobuf:"varint,5,opt,name=propertyVersion,proto3" json:"propertyVersion,omitempty"`
}

func (x *StreamDescriptor) Reset() {
	*x = StreamDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDescriptor) ProtoMessage() {}

func (x *StreamDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDescriptor.ProtoReflect.Descriptor instead.
func (*StreamDescriptor) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{11}
}

func (x *StreamDescriptor) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *StreamDescriptor) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *StreamDescriptor) GetTags() []*KeyOptValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *StreamDescriptor) GetAnnotations() []*KeyOptValue {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *StreamDescriptor) GetPropertyVersion() uint64 {
	if x != nil {
		return x.PropertyVersion
	}
	return 0
}

type SetStreamAnnotationsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                    []byte         `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ExpectedPropertyVersion uint64         `protobuf:"varint,2,opt,name=expectedPropertyVersion,proto3" json:"expectedPropertyVersion,omitempty"`
	Changes                 []*KeyOptValue `protobuf:"bytes,3,rep,name=changes,proto3" json:"changes,omitempty"`
	Removals                []string       `protobuf:"bytes,4,rep,name=removals,proto3" json:"removals,omitempty"`
}

func (x *SetStreamAnnotationsParams) Reset() {
	*x = SetStreamAnnotationsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStreamAnnotationsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStreamAnnotationsParams) ProtoMessage() {}

func (x *SetStreamAnnotationsParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStreamAnnotationsParams.ProtoReflect.Descriptor instead.
func (*SetStreamAnnotationsParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{12}
}

func (x *SetStreamAnnotationsParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *SetStreamAnnotationsParams) GetExpectedPropertyVersion() uint64 {
	if x != nil {
		return x.ExpectedPropertyVersion
	}
	return 0
}

func (x *SetStreamAnnotationsParams) GetChanges() []*KeyOptValue {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *SetStreamAnnotationsParams) GetRemovals() []string {
	if x != nil {
		return x.Removals
	}
	return nil
}

type SetStreamAnnotationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *SetStreamAnnotationsResponse) Reset() {
	*x = SetStreamAnnotationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStreamAnnotationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStreamAnnotationsResponse) ProtoMessage() {}

func (x *SetStreamAnnotationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStreamAnnotationsResponse.ProtoReflect.Descriptor instead.
func (*SetStreamAnnotationsResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{13}
}

func (x *SetStreamAnnotationsResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

type SetStreamTagsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                    []byte         `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ExpectedPropertyVersion uint64         `protobuf:"varint,2,opt,name=expectedPropertyVersion,proto3" json:"expectedPropertyVersion,omitempty"`
	Tags                    []*KeyOptValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Collection              string         `protobuf:"bytes,4,opt,name=collection,proto3" json:"collection,omitempty"`
	Remove                  []string       `protobuf:"bytes,5,rep,name=remove,proto3" json:"remove,omitempty"`
}

func (x *SetStreamTagsParams) Reset() {
	*x = SetStreamTagsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStreamTagsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStreamTagsParams) ProtoMessage() {}

func (x *SetStreamTagsParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStreamTagsParams.ProtoReflect.Descriptor instead.
func (*SetStreamTagsParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{14}
}

func (x *SetStreamTagsParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *SetStreamTagsParams) GetExpectedPropertyVersion() uint64 {
	if x != nil {
		return x.ExpectedPropertyVersion
	}
	return 0
}

func (x *SetStreamTagsParams) GetTags() []*KeyOptValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SetStreamTagsParams) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *SetStreamTagsParams) GetRemove() []string {
	if x != nil {
		return x.Remove
	}
	return nil
}

type SetStreamTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *SetStreamTagsResponse) Reset() {
	*x = SetStreamTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStreamTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStreamTagsResponse) ProtoMessage() {}

func (x *SetStreamTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStreamTagsResponse.ProtoReflect.Descriptor instead.
func (*SetStreamTagsResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{15}
}

func (x *SetStreamTagsResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

type CreateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        []byte         `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Collection  string         `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Tags        []*KeyOptValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Annotations []*KeyOptValue `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty"`
}

func (x *CreateParams) Reset() {
	*x = CreateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParams) ProtoMessage() {}

func (x *CreateParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParams.ProtoReflect.Descriptor instead.
func (*CreateParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{16}
}

func (x *CreateParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *CreateParams) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CreateParams) GetTags() []*KeyOptValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateParams) GetAnnotations() []*KeyOptValue {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{17}
}

func (x *CreateResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

type MetadataUsageParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Role   *Role  `protobuf:"bytes,100,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *MetadataUsageParams) Reset() {
	*x = MetadataUsageParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataUsageParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataUsageParams) ProtoMessage() {}

func (x *MetadataUsageParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataUsageParams.ProtoReflect.Descriptor instead.
func (*MetadataUsageParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{18}
}

func (x *MetadataUsageParams) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *MetadataUsageParams) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type MetadataUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat        *Status     `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Tags        []*KeyCount `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Annotations []*KeyCount `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
}

func (x *MetadataUsageResponse) Reset() {
	*x = MetadataUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataUsageResponse) ProtoMessage() {}

func (x *MetadataUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataUsageResponse.ProtoReflect.Descriptor instead.
func (*MetadataUsageResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{19}
}

func (x *MetadataUsageResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *MetadataUsageResponse) GetTags() []*KeyCount {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MetadataUsageResponse) GetAnnotations() []*KeyCount {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type KeyCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *KeyCount) Reset() {
	*x = KeyCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyCount) ProtoMessage() {}

func (x *KeyCount) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyCount.ProtoReflect.Descriptor instead.
func (*KeyCount) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{20}
}

func (x *KeyCount) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyCount) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ListCollectionsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Role   *Role  `protobuf:"bytes,100,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ListCollectionsParams) Reset() {
	*x = ListCollectionsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsParams) ProtoMessage() {}

func (x *ListCollectionsParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsParams.ProtoReflect.Descriptor instead.
func (*ListCollectionsParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{21}
}

func (x *ListCollectionsParams) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ListCollectionsParams) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type ListCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat        *Status  `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Collections []string `protobuf:"bytes,2,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{22}
}

func (x *ListCollectionsResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *ListCollectionsResponse) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

type LookupStreamsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection         string         `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	IsCollectionPrefix bool           `protobuf:"varint,2,opt,name=isCollectionPrefix,proto3" json:"isCollectionPrefix,omitempty"`
	Tags               []*KeyOptValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Annotations        []*KeyOptValue `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty"`
	Role               *Role          `protobuf:"bytes,100,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *LookupStreamsParams) Reset() {
	*x = LookupStreamsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupStreamsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupStreamsParams) ProtoMessage() {}

func (x *LookupStreamsParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupStreamsParams.ProtoReflect.Descriptor instead.
func (*LookupStreamsParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{23}
}

func (x *LookupStreamsParams) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *LookupStreamsParams) GetIsCollectionPrefix() bool {
	if x != nil {
		return x.IsCollectionPrefix
	}
	return false
}

func (x *LookupStreamsParams) GetTags() []*KeyOptValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LookupStreamsParams) GetAnnotations() []*KeyOptValue {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *LookupStreamsParams) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type LookupStreamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat    *Status             `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Results []*StreamDescriptor `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *LookupStreamsResponse) Reset() {
	*x = LookupStreamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupStreamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupStreamsResponse) ProtoMessage() {}

func (x *LookupStreamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupStreamsResponse.ProtoReflect.Descriptor instead.
func (*LookupStreamsResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{24}
}

func (x *LookupStreamsResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *LookupStreamsResponse) GetResults() []*StreamDescriptor {
	if x != nil {
		return x.Results
	}
	return nil
}

type NearestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Time         int64  `protobuf:"fixed64,2,opt,name=time,proto3" json:"time,omitempty"`
	VersionMajor uint64 `protobuf:"varint,3,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	Backward     bool   `protobuf:"varint,4,opt,name=backward,proto3" json:"backward,omitempty"`
}

func (x *NearestParams) Reset() {
	*x = NearestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearestParams) ProtoMessage() {}

func (x *NearestParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearestParams.ProtoReflect.Descriptor instead.
func (*NearestParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{25}
}

func (x *NearestParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *NearestParams) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *NearestParams) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *NearestParams) GetBackward() bool {
	if x != nil {
		return x.Backward
	}
	return false
}

type NearestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status   `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64    `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64    `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
	Value        *RawPoint `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NearestResponse) Reset() {
	*x = NearestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearestResponse) ProtoMessage() {}

func (x *NearestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearestResponse.ProtoReflect.Descriptor instead.
func (*NearestResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{26}
}

func (x *NearestResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *NearestResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *NearestResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

func (x *NearestResponse) GetValue() *RawPoint {
	if x != nil {
		return x.Value
	}
	return nil
}

type ChangesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	FromMajor  uint64 `protobuf:"varint,2,opt,name=fromMajor,proto3" json:"fromMajor,omitempty"`
	ToMajor    uint64 `protobuf:"varint,3,opt,name=toMajor,proto3" json:"toMajor,omitempty"`
	Resolution uint32 `protobuf:"varint,4,opt,name=resolution,proto3" json:"resolution,omitempty"`
}

func (x *ChangesParams) Reset() {
	*x = ChangesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesParams) ProtoMessage() {}

func (x *ChangesParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesParams.ProtoReflect.Descriptor instead.
func (*ChangesParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{27}
}

func (x *ChangesParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *ChangesParams) GetFromMajor() uint64 {
	if x != nil {
		return x.FromMajor
	}
	return 0
}

func (x *ChangesParams) GetToMajor() uint64 {
	if x != nil {
		return x.ToMajor
	}
	return 0
}

func (x *ChangesParams) GetResolution() uint32 {
	if x != nil {
		return x.Resolution
	}
	return 0
}

type ChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status         `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64          `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64          `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
	Ranges       []*ChangedRange `protobuf:"bytes,4,rep,name=ranges,proto3" json:"ranges,omitempty"`
}

func (x *ChangesResponse) Reset() {
	*x = ChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesResponse) ProtoMessage() {}

func (x *ChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesResponse.ProtoReflect.Descriptor instead.
func (*ChangesResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{28}
}

func (x *ChangesResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *ChangesResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *ChangesResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

func (x *ChangesResponse) GetRanges() []*ChangedRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type RoundSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Spec:
	//	*RoundSpec_Bits
	Spec isRoundSpec_Spec `protobuf_oneof:"spec"`
}

func (x *RoundSpec) Reset() {
	*x = RoundSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundSpec) ProtoMessage() {}

func (x *RoundSpec) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundSpec.ProtoReflect.Descriptor instead.
func (*RoundSpec) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{29}
}

func (m *RoundSpec) GetSpec() isRoundSpec_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (x *RoundSpec) GetBits() int32 {
	if x, ok := x.GetSpec().(*RoundSpec_Bits); ok {
		return x.Bits
	}
	return 0
}

type isRoundSpec_Spec interface {
	isRoundSpec_Spec()
}

type RoundSpec_Bits struct {
	Bits int32 `protobuf:"varint,2,opt,name=bits,proto3,oneof"` // Round to a bit boundary
}

func (*RoundSpec_Bits) isRoundSpec_Spec() {}

type InsertParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        []byte      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Sync        bool        `protobuf:"varint,2,opt,name=sync,proto3" json:"sync,omitempty"`
	MergePolicy MergePolicy `protobuf:"varint,4,opt,name=merge_policy,json=mergePolicy,proto3,enum=v5api.MergePolicy" json:"merge_policy,omitempty"`
	Rounding    *RoundSpec  `protobuf:"bytes,5,opt,name=rounding,proto3" json:"rounding,omitempty"`
	Values      []*RawPoint `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *InsertParams) Reset() {
	*x = InsertParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertParams) ProtoMessage() {}

func (x *InsertParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertParams.ProtoReflect.Descriptor instead.
func (*InsertParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{30}
}

func (x *InsertParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *InsertParams) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *InsertParams) GetMergePolicy() MergePolicy {
	if x != nil {
		return x.MergePolicy
	}
	return MergePolicy_NEVER
}

func (x *InsertParams) GetRounding() *RoundSpec {
	if x != nil {
		return x.Rounding
	}
	return nil
}

func (x *InsertParams) GetValues() []*RawPoint {
	if x != nil {
		return x.Values
	}
	return nil
}

type InsertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64  `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64  `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
}

func (x *InsertResponse) Reset() {
	*x = InsertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertResponse) ProtoMessage() {}

func (x *InsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertResponse.ProtoReflect.Descriptor instead.
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{31}
}

func (x *InsertResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *InsertResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *InsertResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

type DeleteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Start int64  `protobuf:"fixed64,2,opt,name=start,proto3" json:"start,omitempty"`
	End   int64  `protobuf:"fixed64,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *DeleteParams) Reset() {
	*x = DeleteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteParams) ProtoMessage() {}

func (x *DeleteParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteParams.ProtoReflect.Descriptor instead.
func (*DeleteParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *DeleteParams) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *DeleteParams) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64  `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64  `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *DeleteResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *DeleteResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

type InfoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InfoParams) Reset() {
	*x = InfoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoParams) ProtoMessage() {}

func (x *InfoParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoParams.ProtoReflect.Descriptor instead.
func (*InfoParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{34}
}

type InfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status    `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Mash         *Mash      `protobuf:"bytes,2,opt,name=mash,proto3" json:"mash,omitempty"`
	MajorVersion uint32     `protobuf:"varint,3,opt,name=majorVersion,proto3" json:"majorVersion,omitempty"`
	MinorVersion uint32     `protobuf:"varint,4,opt,name=minorVersion,proto3" json:"minorVersion,omitempty"`
	Build        string     `protobuf:"bytes,5,opt,name=build,proto3" json:"build,omitempty"`
	Proxy        *ProxyInfo `protobuf:"bytes,6,opt,name=proxy,proto3" json:"proxy,omitempty"`
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{35}
}

func (x *InfoResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *InfoResponse) GetMash() *Mash {
	if x != nil {
		return x.Mash
	}
	return nil
}

func (x *InfoResponse) GetMajorVersion() uint32 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *InfoResponse) GetMinorVersion() uint32 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

func (x *InfoResponse) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *InfoResponse) GetProxy() *ProxyInfo {
	if x != nil {
		return x.Proxy
	}
	return nil
}

type ProxyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyEndpoints []string `protobuf:"bytes,1,rep,name=proxyEndpoints,proto3" json:"proxyEndpoints,omitempty"`
}

func (x *ProxyInfo) Reset() {
	*x = ProxyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyInfo) ProtoMessage() {}

func (x *ProxyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyInfo.ProtoReflect.Descriptor instead.
func (*ProxyInfo) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{36}
}

func (x *ProxyInfo) GetProxyEndpoints() []string {
	if x != nil {
		return x.ProxyEndpoints
	}
	return nil
}

type FaultInjectParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   uint64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Params []byte `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *FaultInjectParams) Reset() {
	*x = FaultInjectParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaultInjectParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultInjectParams) ProtoMessage() {}

func (x *FaultInjectParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultInjectParams.ProtoReflect.Descriptor instead.
func (*FaultInjectParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{37}
}

func (x *FaultInjectParams) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FaultInjectParams) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

type FaultInjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Rv   []byte  `protobuf:"bytes,2,opt,name=rv,proto3" json:"rv,omitempty"`
}

func (x *FaultInjectResponse) Reset() {
	*x = FaultInjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaultInjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultInjectResponse) ProtoMessage() {}

func (x *FaultInjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultInjectResponse.ProtoReflect.Descriptor instead.
func (*FaultInjectResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{38}
}

func (x *FaultInjectResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *FaultInjectResponse) GetRv() []byte {
	if x != nil {
		return x.Rv
	}
	return nil
}

type FlushParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *FlushParams) Reset() {
	*x = FlushParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushParams) ProtoMessage() {}

func (x *FlushParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushParams.ProtoReflect.Descriptor instead.
func (*FlushParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{39}
}

func (x *FlushParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type FlushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat         *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	VersionMajor uint64  `protobuf:"varint,2,opt,name=versionMajor,proto3" json:"versionMajor,omitempty"`
	VersionMinor uint64  `protobuf:"varint,3,opt,name=versionMinor,proto3" json:"versionMinor,omitempty"`
}

func (x *FlushResponse) Reset() {
	*x = FlushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushResponse) ProtoMessage() {}

func (x *FlushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushResponse.ProtoReflect.Descriptor instead.
func (*FlushResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{40}
}

func (x *FlushResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *FlushResponse) GetVersionMajor() uint64 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

func (x *FlushResponse) GetVersionMinor() uint64 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

type ObliterateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ObliterateParams) Reset() {
	*x = ObliterateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObliterateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObliterateParams) ProtoMessage() {}

func (x *ObliterateParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObliterateParams.ProtoReflect.Descriptor instead.
func (*ObliterateParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{41}
}

func (x *ObliterateParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type ObliterateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *ObliterateResponse) Reset() {
	*x = ObliterateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObliterateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObliterateResponse) ProtoMessage() {}

func (x *ObliterateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObliterateResponse.ProtoReflect.Descriptor instead.
func (*ObliterateResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{42}
}

func (x *ObliterateResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

type RawPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int64   `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RawPoint) Reset() {
	*x = RawPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawPoint) ProtoMessage() {}

func (x *RawPoint) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawPoint.ProtoReflect.Descriptor instead.
func (*RawPoint) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{43}
}

func (x *RawPoint) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RawPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type StatPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time   int64   `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	Min    float64 `protobuf:"fixed64,2,opt,name=min,proto3" json:"min,omitempty"`
	Mean   float64 `protobuf:"fixed64,3,opt,name=mean,proto3" json:"mean,omitempty"`
	Max    float64 `protobuf:"fixed64,4,opt,name=max,proto3" json:"max,omitempty"`
	Count  uint64  `protobuf:"fixed64,5,opt,name=count,proto3" json:"count,omitempty"`
	Stddev float64 `protobuf:"fixed64,6,opt,name=stddev,proto3" json:"stddev,omitempty"`
}

func (x *StatPoint) Reset() {
	*x = StatPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatPoint) ProtoMessage() {}

func (x *StatPoint) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatPoint.ProtoReflect.Descriptor instead.
func (*StatPoint) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{44}
}

func (x *StatPoint) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *StatPoint) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *StatPoint) GetMean() float64 {
	if x != nil {
		return x.Mean
	}
	return 0
}

func (x *StatPoint) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *StatPoint) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StatPoint) GetStddev() float64 {
	if x != nil {
		return x.Stddev
	}
	return 0
}

type ChangedRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"fixed64,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"fixed64,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ChangedRange) Reset() {
	*x = ChangedRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangedRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangedRange) ProtoMessage() {}

func (x *ChangedRange) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangedRange.ProtoReflect.Descriptor instead.
func (*ChangedRange) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{45}
}

func (x *ChangedRange) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ChangedRange) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Mash *Mash  `protobuf:"bytes,3,opt,name=mash,proto3" json:"mash,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{46}
}

func (x *Status) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Status) GetMash() *Mash {
	if x != nil {
		return x.Mash
	}
	return nil
}

type Mash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revision       int64     `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`
	Leader         string    `protobuf:"bytes,2,opt,name=leader,proto3" json:"leader,omitempty"`
	LeaderRevision int64     `protobuf:"varint,3,opt,name=leaderRevision,proto3" json:"leaderRevision,omitempty"`
	TotalWeight    int64     `protobuf:"varint,4,opt,name=totalWeight,proto3" json:"totalWeight,omitempty"`
	Healthy        bool      `protobuf:"varint,5,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Unmapped       float64   `protobuf:"fixed64,6,opt,name=unmapped,proto3" json:"unmapped,omitempty"`
	Members        []*Member `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *Mash) Reset() {
	*x = Mash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mash) ProtoMessage() {}

func (x *Mash) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mash.ProtoReflect.Descriptor instead.
func (*Mash) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{47}
}

func (x *Mash) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *Mash) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *Mash) GetLeaderRevision() int64 {
	if x != nil {
		return x.LeaderRevision
	}
	return 0
}

func (x *Mash) GetTotalWeight() int64 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *Mash) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *Mash) GetUnmapped() float64 {
	if x != nil {
		return x.Unmapped
	}
	return 0
}

func (x *Mash) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash           uint32  `protobuf:"varint,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Nodename       string  `protobuf:"bytes,2,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Up             bool    `protobuf:"varint,3,opt,name=up,proto3" json:"up,omitempty"`
	In             bool    `protobuf:"varint,4,opt,name=in,proto3" json:"in,omitempty"`
	Enabled        bool    `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Start          int64   `protobuf:"varint,6,opt,name=start,proto3" json:"start,omitempty"`
	End            int64   `protobuf:"varint,7,opt,name=end,proto3" json:"end,omitempty"`
	Weight         int64   `protobuf:"varint,8,opt,name=weight,proto3" json:"weight,omitempty"`
	ReadPreference float64 `protobuf:"fixed64,9,opt,name=readPreference,proto3" json:"readPreference,omitempty"`
	HttpEndpoints  string  `protobuf:"bytes,10,opt,name=httpEndpoints,proto3" json:"httpEndpoints,omitempty"`
	GrpcEndpoints  string  `protobuf:"bytes,11,opt,name=grpcEndpoints,proto3" json:"grpcEndpoints,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{48}
}

func (x *Member) GetHash() uint32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *Member) GetNodename() string {
	if x != nil {
		return x.Nodename
	}
	return ""
}

func (x *Member) GetUp() bool {
	if x != nil {
		return x.Up
	}
	return false
}

func (x *Member) GetIn() bool {
	if x != nil {
		return x.In
	}
	return false
}

func (x *Member) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Member) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Member) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *Member) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Member) GetReadPreference() float64 {
	if x != nil {
		return x.ReadPreference
	}
	return 0
}

func (x *Member) GetHttpEndpoints() string {
	if x != nil {
		return x.HttpEndpoints
	}
	return ""
}

func (x *Member) GetGrpcEndpoints() string {
	if x != nil {
		return x.GrpcEndpoints
	}
	return ""
}

type KeyOptValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val *OptValue `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *KeyOptValue) Reset() {
	*x = KeyOptValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyOptValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyOptValue) ProtoMessage() {}

func (x *KeyOptValue) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyOptValue.ProtoReflect.Descriptor instead.
func (*KeyOptValue) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{49}
}

func (x *KeyOptValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyOptValue) GetVal() *OptValue {
	if x != nil {
		return x.Val
	}
	return nil
}

type OptValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OptValue) Reset() {
	*x = OptValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptValue) ProtoMessage() {}

func (x *OptValue) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptValue.ProtoReflect.Descriptor instead.
func (*OptValue) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{50}
}

func (x *OptValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{51}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StreamCSVConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Label   string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Uuid    []byte `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *StreamCSVConfig) Reset() {
	*x = StreamCSVConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamCSVConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCSVConfig) ProtoMessage() {}

func (x *StreamCSVConfig) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCSVConfig.ProtoReflect.Descriptor instead.
func (*StreamCSVConfig) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{52}
}

func (x *StreamCSVConfig) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StreamCSVConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *StreamCSVConfig) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type GenerateCSVParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryType       GenerateCSVParams_QueryType `protobuf:"varint,1,opt,name=queryType,proto3,enum=v5api.GenerateCSVParams_QueryType" json:"queryType,omitempty"`
	StartTime       int64                       `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime         int64                       `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	WindowSize      uint64                      `protobuf:"varint,4,opt,name=windowSize,proto3" json:"windowSize,omitempty"`
	Depth           uint32                      `protobuf:"varint,5,opt,name=depth,proto3" json:"depth,omitempty"`
	IncludeVersions bool                        `protobuf:"varint,6,opt,name=includeVersions,proto3" json:"includeVersions,omitempty"`
	Streams         []*StreamCSVConfig          `protobuf:"bytes,7,rep,name=streams,proto3" json:"streams,omitempty"`
}

func (x *GenerateCSVParams) Reset() {
	*x = GenerateCSVParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCSVParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCSVParams) ProtoMessage() {}

func (x *GenerateCSVParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCSVParams.ProtoReflect.Descriptor instead.
func (*GenerateCSVParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{53}
}

func (x *GenerateCSVParams) GetQueryType() GenerateCSVParams_QueryType {
	if x != nil {
		return x.QueryType
	}
	return GenerateCSVParams_ALIGNED_WINDOWS_QUERY
}

func (x *GenerateCSVParams) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GenerateCSVParams) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GenerateCSVParams) GetWindowSize() uint64 {
	if x != nil {
		return x.WindowSize
	}
	return 0
}

func (x *GenerateCSVParams) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *GenerateCSVParams) GetIncludeVersions() bool {
	if x != nil {
		return x.IncludeVersions
	}
	return false
}

func (x *GenerateCSVParams) GetStreams() []*StreamCSVConfig {
	if x != nil {
		return x.Streams
	}
	return nil
}

type GenerateCSVResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat     *Status  `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	IsHeader bool     `protobuf:"varint,2,opt,name=isHeader,proto3" json:"isHeader,omitempty"`
	Row      []string `protobuf:"bytes,3,rep,name=row,proto3" json:"row,omitempty"`
}

func (x *GenerateCSVResponse) Reset() {
	*x = GenerateCSVResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCSVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCSVResponse) ProtoMessage() {}

func (x *GenerateCSVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCSVResponse.ProtoReflect.Descriptor instead.
func (*GenerateCSVResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{54}
}

func (x *GenerateCSVResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *GenerateCSVResponse) GetIsHeader() bool {
	if x != nil {
		return x.IsHeader
	}
	return false
}

func (x *GenerateCSVResponse) GetRow() []string {
	if x != nil {
		return x.Row
	}
	return nil
}

type SQLQueryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Params []string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	Role   *Role    `protobuf:"bytes,100,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *SQLQueryParams) Reset() {
	*x = SQLQueryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLQueryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLQueryParams) ProtoMessage() {}

func (x *SQLQueryParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLQueryParams.ProtoReflect.Descriptor instead.
func (*SQLQueryParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{55}
}

func (x *SQLQueryParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SQLQueryParams) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SQLQueryParams) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type SQLQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat        *Status  `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	SQLQueryRow [][]byte `protobuf:"bytes,2,rep,name=SQLQueryRow,proto3" json:"SQLQueryRow,omitempty"`
}

func (x *SQLQueryResponse) Reset() {
	*x = SQLQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLQueryResponse) ProtoMessage() {}

func (x *SQLQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLQueryResponse.ProtoReflect.Descriptor instead.
func (*SQLQueryResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{56}
}

func (x *SQLQueryResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *SQLQueryResponse) GetSQLQueryRow() [][]byte {
	if x != nil {
		return x.SQLQueryRow
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{57}
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetCompactionConfigParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Which stream to configure
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//Accessing versions LESS than this is not allowed
	CompactedVersion uint64 `protobuf:"varint,2,opt,name=CompactedVersion,proto3" json:"CompactedVersion,omitempty"`
	//For every timestamp >= Start and < End in this list,
	//we cannot traverse the tree < Resolution.
	//These ranges are the new ones you want to add, not the full list
	ReducedResolutionRanges []*ReducedResolutionRange `protobuf:"bytes,3,rep,name=reducedResolutionRanges,proto3" json:"reducedResolutionRanges,omitempty"`
	// Addresses less than this will be moved to the archive storage soon
	// You can't set this to less than it is, so zero means leave as is
	TargetArchiveHorizon uint64 `protobuf:"varint,4,opt,name=targetArchiveHorizon,proto3" json:"targetArchiveHorizon,omitempty"`
}

func (x *SetCompactionConfigParams) Reset() {
	*x = SetCompactionConfigParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCompactionConfigParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCompactionConfigParams) ProtoMessage() {}

func (x *SetCompactionConfigParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCompactionConfigParams.ProtoReflect.Descriptor instead.
func (*SetCompactionConfigParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{58}
}

func (x *SetCompactionConfigParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *SetCompactionConfigParams) GetCompactedVersion() uint64 {
	if x != nil {
		return x.CompactedVersion
	}
	return 0
}

func (x *SetCompactionConfigParams) GetReducedResolutionRanges() []*ReducedResolutionRange {
	if x != nil {
		return x.ReducedResolutionRanges
	}
	return nil
}

func (x *SetCompactionConfigParams) GetTargetArchiveHorizon() uint64 {
	if x != nil {
		return x.TargetArchiveHorizon
	}
	return 0
}

type SetCompactionConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *SetCompactionConfigResponse) Reset() {
	*x = SetCompactionConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCompactionConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCompactionConfigResponse) ProtoMessage() {}

func (x *SetCompactionConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCompactionConfigResponse.ProtoReflect.Descriptor instead.
func (*SetCompactionConfigResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{59}
}

func (x *SetCompactionConfigResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

type GetCompactionConfigParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Which stream to query
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetCompactionConfigParams) Reset() {
	*x = GetCompactionConfigParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompactionConfigParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompactionConfigParams) ProtoMessage() {}

func (x *GetCompactionConfigParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompactionConfigParams.ProtoReflect.Descriptor instead.
func (*GetCompactionConfigParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{60}
}

func (x *GetCompactionConfigParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type GetCompactionConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *Status `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	//The latest version of the stream, as returned by StreamInfo
	LatestMajorVersion uint64 `protobuf:"varint,2,opt,name=LatestMajorVersion,proto3" json:"LatestMajorVersion,omitempty"`
	//Accessing versions LESS than this is not allowed
	CompactedVersion uint64 `protobuf:"varint,3,opt,name=CompactedVersion,proto3" json:"CompactedVersion,omitempty"`
	//For every timestamp >= Start and < End in this list,
	//we cannot traverse the tree < Resolution.
	ReducedResolutionRanges []*ReducedResolutionRange `protobuf:"bytes,4,rep,name=reducedResolutionRanges,proto3" json:"reducedResolutionRanges,omitempty"`
	// Addresses less than this will be moved to the archive storage soon
	TargetArchiveHorizon uint64 `protobuf:"varint,5,opt,name=targetArchiveHorizon,proto3" json:"targetArchiveHorizon,omitempty"`
}

func (x *GetCompactionConfigResponse) Reset() {
	*x = GetCompactionConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompactionConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompactionConfigResponse) ProtoMessage() {}

func (x *GetCompactionConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompactionConfigResponse.ProtoReflect.Descriptor instead.
func (*GetCompactionConfigResponse) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{61}
}

func (x *GetCompactionConfigResponse) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *GetCompactionConfigResponse) GetLatestMajorVersion() uint64 {
	if x != nil {
		return x.LatestMajorVersion
	}
	return 0
}

func (x *GetCompactionConfigResponse) GetCompactedVersion() uint64 {
	if x != nil {
		return x.CompactedVersion
	}
	return 0
}

func (x *GetCompactionConfigResponse) GetReducedResolutionRanges() []*ReducedResolutionRange {
	if x != nil {
		return x.ReducedResolutionRanges
	}
	return nil
}

func (x *GetCompactionConfigResponse) GetTargetArchiveHorizon() uint64 {
	if x != nil {
		return x.TargetArchiveHorizon
	}
	return 0
}

type ReducedResolutionRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      int64  `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	End        int64  `protobuf:"varint,2,opt,name=End,proto3" json:"End,omitempty"`
	Resolution uint32 `protobuf:"varint,3,opt,name=Resolution,proto3" json:"Resolution,omitempty"`
}

func (x *ReducedResolutionRange) Reset() {
	*x = ReducedResolutionRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedResolutionRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedResolutionRange) ProtoMessage() {}

func (x *ReducedResolutionRange) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedResolutionRange.ProtoReflect.Descriptor instead.
func (*ReducedResolutionRange) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{62}
}

func (x *ReducedResolutionRange) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ReducedResolutionRange) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *ReducedResolutionRange) GetResolution() uint32 {
	if x != nil {
		return x.Resolution
	}
	return 0
}

type SubscriptionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid [][]byte `protobuf:"bytes,1,rep,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SubscriptionParams) Reset() {
	*x = SubscriptionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionParams) ProtoMessage() {}

func (x *SubscriptionParams) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionParams.ProtoReflect.Descriptor instead.
func (*SubscriptionParams) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{63}
}

func (x *SubscriptionParams) GetUuid() [][]byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type SubscriptionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat   *Status     `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Uuid   []byte      `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Values []*RawPoint `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *SubscriptionResp) Reset() {
	*x = SubscriptionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btrdb_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionResp) ProtoMessage() {}

func (x *SubscriptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_btrdb_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionResp.ProtoReflect.Descriptor instead.
func (*SubscriptionResp) Descriptor() ([]byte, []int) {
	return file_btrdb_proto_rawDescGZIP(), []int{64}
}

func (x *SubscriptionResp) GetStat() *Status {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *SubscriptionResp) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *SubscriptionResp) GetValues() []*RawPoint {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_btrdb_proto protoreflect.FileDescriptor

var file_btrdb_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x74, 0x72, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76,
	0x35, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x71, 0x0a, 0x0f, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x10, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a,
	0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x61, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x92, 0x01, 0x0a, 0x14, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x10, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x4e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x4e, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x61,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x35, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x61, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x63, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x52, 0x61, 0x77, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x56, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x10, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x96, 0x01, 0x0a, 0x14, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x10, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0xad, 0x01, 0x0a, 0x16, 0x41, 0x6c, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x28,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x10, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x91, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6d, 0x69, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f,
	0x6d, 0x69, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x6d,
	0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x6f, 0x6d, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x35, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0xce,
	0x01, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65,
	0x79, 0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x34, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79,
	0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xb4, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x17, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x41, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22,
	0x3a, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x33,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x22, 0x4e, 0x0a, 0x13, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x35, 0x61,
	0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x32, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1f, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x35,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x5e,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe4,
	0x01, 0x0a, 0x13, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79,
	0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x34,
	0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x4f,
	0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x6d, 0x0a, 0x15, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76,
	0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0x77, 0x0a, 0x0d, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x22, 0xa3, 0x01,
	0x0a, 0x0f, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04,
	0x73, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x35,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x7b, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x4d, 0x61, 0x6a, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xa9, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12,
	0x2b, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x09,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x62, 0x69, 0x74, 0x73, 0x42,
	0x06, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xc4, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63,
	0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x35, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61,
	0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x7b,
	0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x22, 0x4a, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x10, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x7b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x6f, 0x72, 0x22, 0x0c, 0x0a, 0x0a, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x73,
	0x68, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d,
	0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x22, 0x33, 0x0a,
	0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0x3f, 0x0a, 0x11, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x48, 0x0a, 0x13, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x72, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x72, 0x76, 0x22, 0x21, 0x0a,
	0x0b, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x22, 0x7a, 0x0a, 0x0d, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04,
	0x73, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x22, 0x26, 0x0a, 0x10,
	0x4f, 0x62, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x12, 0x4f, 0x62, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x34, 0x0a,
	0x08, 0x52, 0x61, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x10, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x10, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x22, 0x36, 0x0a, 0x0c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x22, 0x4f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x73, 0x68, 0x52, 0x04,
	0x6d, 0x61, 0x73, 0x68, 0x22, 0xe3, 0x01, 0x0a, 0x04, 0x4d, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xa6, 0x02, 0x0a, 0x06, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x68, 0x74, 0x74, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x67, 0x72, 0x70, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x70, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x20, 0x0a, 0x08, 0x4f, 0x70, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x55, 0x0a,
	0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x53, 0x56, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0xe9, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x43, 0x53, 0x56, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x53,
	0x56, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x53, 0x56, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x48, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x5f, 0x57,
	0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x41, 0x57, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x02,
	0x22, 0x66, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x53, 0x56, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x22, 0x5f, 0x0a, 0x0e, 0x53, 0x51, 0x4c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x57, 0x0a, 0x10, 0x53, 0x51, 0x4c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x77, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x6f, 0x77, 0x22, 0x1a, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe8,
	0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x17,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x17, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x1b, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x2f, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xa9, 0x02, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04,
	0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x17, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76,
	0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x17, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x16, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2a, 0x3c, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x45, 0x56, 0x45, 0x52,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x52, 0x45, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50,
	0x4c, 0x41, 0x43, 0x45, 0x10, 0x03, 0x32, 0x9c, 0x12, 0x0a, 0x05, 0x42, 0x54, 0x72, 0x44, 0x42,
	0x12, 0x59, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x18, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x61, 0x77,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x6d, 0x0a, 0x0e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1b, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x61, 0x77, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1d, 0x2e, 0x76, 0x35, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x22, 0x12, 0x2f, 0x76, 0x35, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x72, 0x61, 0x77, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x6d, 0x0a, 0x0e, 0x41, 0x6c,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x1b, 0x2e, 0x76,
	0x35, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1d, 0x2e, 0x76, 0x35, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x22, 0x12, 0x2f, 0x76, 0x35, 0x2f, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x51, 0x0a, 0x07, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x76, 0x35, 0x61,
	0x70, 0x69, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x35, 0x2f,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x0a,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x76, 0x35, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x19, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x21, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x23, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x67, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x1a, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c, 0x2e, 0x76,
	0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x74, 0x61, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x4b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x13, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x35, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13,
	0x2f, 0x76, 0x35, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x69, 0x0a, 0x0d, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x2e, 0x76, 0x35, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x35,
	0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x3a, 0x01,
	0x2a, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x07, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x61,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x35, 0x2f, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x51, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x14, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x35, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x12, 0x13, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x35, 0x2f, 0x69, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x4b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x35, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x43, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x76, 0x35, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x13, 0x2e, 0x76,
	0x35, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x35, 0x2f, 0x69,
	0x6e, 0x66, 0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x0b, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x1a, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x35, 0x2f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x69, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x47, 0x0a, 0x05, 0x46, 0x6c, 0x75, 0x73, 0x68,
	0x12, 0x12, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x14, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6c, 0x75,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x22, 0x09, 0x2f, 0x76, 0x35, 0x2f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x3a, 0x01, 0x2a,
	0x12, 0x5b, 0x0a, 0x0a, 0x4f, 0x62, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x62, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x19, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x62, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x35, 0x2f,
	0x6f, 0x62, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x35, 0x2f, 0x67, 0x65, 0x74, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x61, 0x0a, 0x0b,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x53, 0x56, 0x12, 0x18, 0x2e, 0x76, 0x35,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x53, 0x56, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1a, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x53, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x35, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x63, 0x73, 0x76, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12,
	0x55, 0x0a, 0x08, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x76, 0x35,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x17, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x51, 0x4c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x19, 0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x17,
	0x2e, 0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22,
	0x0d, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x3a, 0x01,
	0x2a, 0x30, 0x01, 0x12, 0x7f, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x76, 0x35, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x22, 0x2e, 0x76,
	0x35, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x65,
	0x74, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x3a, 0x01, 0x2a, 0x12, 0x7f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x76, 0x35,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x22, 0x2e,
	0x76, 0x35, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x35, 0x2f, 0x67,
	0x65, 0x74, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x3a, 0x01, 0x2a, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x76, 0x35, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_btrdb_proto_rawDescOnce sync.Once
	file_btrdb_proto_rawDescData = file_btrdb_proto_rawDesc
)

func file_btrdb_proto_rawDescGZIP() []byte {
	file_btrdb_proto_rawDescOnce.Do(func() {
		file_btrdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_btrdb_proto_rawDescData)
	})
	return file_btrdb_proto_rawDescData
}

var file_btrdb_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_btrdb_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_btrdb_proto_goTypes = []interface{}{
	(MergePolicy)(0),                     // 0: v5api.MergePolicy
	(GenerateCSVParams_QueryType)(0),     // 1: v5api.GenerateCSVParams.QueryType
	(*RawValuesParams)(nil),              // 2: v5api.RawValuesParams
	(*RawValuesResponse)(nil),            // 3: v5api.RawValuesResponse
	(*MultiRawValuesParams)(nil),         // 4: v5api.MultiRawValuesParams
	(*MultiRawValuesResponse)(nil),       // 5: v5api.MultiRawValuesResponse
	(*RawPointVec)(nil),                  // 6: v5api.RawPointVec
	(*AlignedWindowsParams)(nil),         // 7: v5api.AlignedWindowsParams
	(*AlignedWindowsResponse)(nil),       // 8: v5api.AlignedWindowsResponse
	(*WindowsParams)(nil),                // 9: v5api.WindowsParams
	(*WindowsResponse)(nil),              // 10: v5api.WindowsResponse
	(*StreamInfoParams)(nil),             // 11: v5api.StreamInfoParams
	(*StreamInfoResponse)(nil),           // 12: v5api.StreamInfoResponse
	(*StreamDescriptor)(nil),             // 13: v5api.StreamDescriptor
	(*SetStreamAnnotationsParams)(nil),   // 14: v5api.SetStreamAnnotationsParams
	(*SetStreamAnnotationsResponse)(nil), // 15: v5api.SetStreamAnnotationsResponse
	(*SetStreamTagsParams)(nil),          // 16: v5api.SetStreamTagsParams
	(*SetStreamTagsResponse)(nil),        // 17: v5api.SetStreamTagsResponse
	(*CreateParams)(nil),                 // 18: v5api.CreateParams
	(*CreateResponse)(nil),               // 19: v5api.CreateResponse
	(*MetadataUsageParams)(nil),          // 20: v5api.MetadataUsageParams
	(*MetadataUsageResponse)(nil),        // 21: v5api.MetadataUsageResponse
	(*KeyCount)(nil),                     // 22: v5api.KeyCount
	(*ListCollectionsParams)(nil),        // 23: v5api.ListCollectionsParams
	(*ListCollectionsResponse)(nil),      // 24: v5api.ListCollectionsResponse
	(*LookupStreamsParams)(nil),          // 25: v5api.LookupStreamsParams
	(*LookupStreamsResponse)(nil),        // 26: v5api.LookupStreamsResponse
	(*NearestParams)(nil),                // 27: v5api.NearestParams
	(*NearestResponse)(nil),              // 28: v5api.NearestResponse
	(*ChangesParams)(nil),                // 29: v5api.ChangesParams
	(*ChangesResponse)(nil),              // 30: v5api.ChangesResponse
	(*RoundSpec)(nil),                    // 31: v5api.RoundSpec
	(*InsertParams)(nil),                 // 32: v5api.InsertParams
	(*InsertResponse)(nil),               // 33: v5api.InsertResponse
	(*DeleteParams)(nil),                 // 34: v5api.DeleteParams
	(*DeleteResponse)(nil),               // 35: v5api.DeleteResponse
	(*InfoParams)(nil),                   // 36: v5api.InfoParams
	(*InfoResponse)(nil),                 // 37: v5api.InfoResponse
	(*ProxyInfo)(nil),                    // 38: v5api.ProxyInfo
	(*FaultInjectParams)(nil),            // 39: v5api.FaultInjectParams
	(*FaultInjectResponse)(nil),          // 40: v5api.FaultInjectResponse
	(*FlushParams)(nil),                  // 41: v5api.FlushParams
	(*FlushResponse)(nil),                // 42: v5api.FlushResponse
	(*ObliterateParams)(nil),             // 43: v5api.ObliterateParams
	(*ObliterateResponse)(nil),           // 44: v5api.ObliterateResponse
	(*RawPoint)(nil),                     // 45: v5api.RawPoint
	(*StatPoint)(nil),                    // 46: v5api.StatPoint
	(*ChangedRange)(nil),                 // 47: v5api.ChangedRange
	(*Status)(nil),                       // 48: v5api.Status
	(*Mash)(nil),                         // 49: v5api.Mash
	(*Member)(nil),                       // 50: v5api.Member
	(*KeyOptValue)(nil),                  // 51: v5api.KeyOptValue
	(*OptValue)(nil),                     // 52: v5api.OptValue
	(*KeyValue)(nil),                     // 53: v5api.KeyValue
	(*StreamCSVConfig)(nil),              // 54: v5api.StreamCSVConfig
	(*GenerateCSVParams)(nil),            // 55: v5api.GenerateCSVParams
	(*GenerateCSVResponse)(nil),          // 56: v5api.GenerateCSVResponse
	(*SQLQueryParams)(nil),               // 57: v5api.SQLQueryParams
	(*SQLQueryResponse)(nil),             // 58: v5api.SQLQueryResponse
	(*Role)(nil),                         // 59: v5api.Role
	(*SetCompactionConfigParams)(nil),    // 60: v5api.SetCompactionConfigParams
	(*SetCompactionConfigResponse)(nil),  // 61: v5api.SetCompactionConfigResponse
	(*GetCompactionConfigParams)(nil),    // 62: v5api.GetCompactionConfigParams
	(*GetCompactionConfigResponse)(nil),  // 63: v5api.GetCompactionConfigResponse
	(*ReducedResolutionRange)(nil),       // 64: v5api.ReducedResolutionRange
	(*SubscriptionParams)(nil),           // 65: v5api.SubscriptionParams
	(*SubscriptionResp)(nil),             // 66: v5api.SubscriptionResp
}
var file_btrdb_proto_depIdxs = []int32{
	48, // 0: v5api.RawValuesResponse.stat:type_name -> v5api.Status
	45, // 1: v5api.RawValuesResponse.values:type_name -> v5api.RawPoint
	48, // 2: v5api.MultiRawValuesResponse.stat:type_name -> v5api.Status
	6,  // 3: v5api.MultiRawValuesResponse.values:type_name -> v5api.RawPointVec
	48, // 4: v5api.AlignedWindowsResponse.stat:type_name -> v5api.Status
	46, // 5: v5api.AlignedWindowsResponse.values:type_name -> v5api.StatPoint
	48, // 6: v5api.WindowsResponse.stat:type_name -> v5api.Status
	46, // 7: v5api.WindowsResponse.values:type_name -> v5api.StatPoint
	59, // 8: v5api.StreamInfoParams.role:type_name -> v5api.Role
	48, // 9: v5api.StreamInfoResponse.stat:type_name -> v5api.Status
	13, // 10: v5api.StreamInfoResponse.descriptor:type_name -> v5api.StreamDescriptor
	51, // 11: v5api.StreamDescriptor.tags:type_name -> v5api.KeyOptValue
	51, // 12: v5api.StreamDescriptor.annotations:type_name -> v5api.KeyOptValue
	51, // 13: v5api.SetStreamAnnotationsParams.changes:type_name -> v5api.KeyOptValue
	48, // 14: v5api.SetStreamAnnotationsResponse.stat:type_name -> v5api.Status
	51, // 15: v5api.SetStreamTagsParams.tags:type_name -> v5api.KeyOptValue
	48, // 16: v5api.SetStreamTagsResponse.stat:type_name -> v5api.Status
	51, // 17: v5api.CreateParams.tags:type_name -> v5api.KeyOptValue
	51, // 18: v5api.CreateParams.annotations:type_name -> v5api.KeyOptValue
	48, // 19: v5api.CreateResponse.stat:type_name -> v5api.Status
	59, // 20: v5api.MetadataUsageParams.role:type_name -> v5api.Role
	48, // 21: v5api.MetadataUsageResponse.stat:type_name -> v5api.Status
	22, // 22: v5api.MetadataUsageResponse.tags:type_name -> v5api.KeyCount
	22, // 23: v5api.MetadataUsageResponse.annotations:type_name -> v5api.KeyCount
	59, // 24: v5api.ListCollectionsParams.role:type_name -> v5api.Role
	48, // 25: v5api.ListCollectionsResponse.stat:type_name -> v5api.Status
	51, // 26: v5api.LookupStreamsParams.tags:type_name -> v5api.KeyOptValue
	51, // 27: v5api.LookupStreamsParams.annotations:type_name -> v5api.KeyOptValue
	59, // 28: v5api.LookupStreamsParams.role:type_name -> v5api.Role
	48, // 29: v5api.LookupStreamsResponse.stat:type_name -> v5api.Status
	13, // 30: v5api.LookupStreamsResponse.results:type_name -> v5api.StreamDescriptor
	48, // 31: v5api.NearestResponse.stat:type_name -> v5api.Status
	45, // 32: v5api.NearestResponse.value:type_name -> v5api.RawPoint
	48, // 33: v5api.ChangesResponse.stat:type_name -> v5api.Status
	47, // 34: v5api.ChangesResponse.ranges:type_name -> v5api.ChangedRange
	0,  // 35: v5api.InsertParams.merge_policy:type_name -> v5api.MergePolicy
	31, // 36: v5api.InsertParams.rounding:type_name -> v5api.RoundSpec
	45, // 37: v5api.InsertParams.values:type_name -> v5api.RawPoint
	48, // 38: v5api.InsertResponse.stat:type_name -> v5api.Status
	48, // 39: v5api.DeleteResponse.stat:type_name -> v5api.Status
	48, // 40: v5api.InfoResponse.stat:type_name -> v5api.Status
	49, // 41: v5api.InfoResponse.mash:type_name -> v5api.Mash
	38, // 42: v5api.InfoResponse.proxy:type_name -> v5api.ProxyInfo
	48, // 43: v5api.FaultInjectResponse.stat:type_name -> v5api.Status
	48, // 44: v5api.FlushResponse.stat:type_name -> v5api.Status
	48, // 45: v5api.ObliterateResponse.stat:type_name -> v5api.Status
	49, // 46: v5api.Status.mash:type_name -> v5api.Mash
	50, // 47: v5api.Mash.members:type_name -> v5api.Member
	52, // 48: v5api.KeyOptValue.val:type_name -> v5api.OptValue
	1,  // 49: v5api.GenerateCSVParams.queryType:type_name -> v5api.GenerateCSVParams.QueryType
	54, // 50: v5api.GenerateCSVParams.streams:type_name -> v5api.StreamCSVConfig
	48, // 51: v5api.GenerateCSVResponse.stat:type_name -> v5api.Status
	59, // 52: v5api.SQLQueryParams.role:type_name -> v5api.Role
	48, // 53: v5api.SQLQueryResponse.stat:type_name -> v5api.Status
	64, // 54: v5api.SetCompactionConfigParams.reducedResolutionRanges:type_name -> v5api.ReducedResolutionRange
	48, // 55: v5api.SetCompactionConfigResponse.stat:type_name -> v5api.Status
	48, // 56: v5api.GetCompactionConfigResponse.stat:type_name -> v5api.Status
	64, // 57: v5api.GetCompactionConfigResponse.reducedResolutionRanges:type_name -> v5api.ReducedResolutionRange
	48, // 58: v5api.SubscriptionResp.stat:type_name -> v5api.Status
	45, // 59: v5api.SubscriptionResp.values:type_name -> v5api.RawPoint
	2,  // 60: v5api.BTrDB.RawValues:input_type -> v5api.RawValuesParams
	4,  // 61: v5api.BTrDB.MultiRawValues:input_type -> v5api.MultiRawValuesParams
	7,  // 62: v5api.BTrDB.AlignedWindows:input_type -> v5api.AlignedWindowsParams
	9,  // 63: v5api.BTrDB.Windows:input_type -> v5api.WindowsParams
	11, // 64: v5api.BTrDB.StreamInfo:input_type -> v5api.StreamInfoParams
	14, // 65: v5api.BTrDB.SetStreamAnnotations:input_type -> v5api.SetStreamAnnotationsParams
	16, // 66: v5api.BTrDB.SetStreamTags:input_type -> v5api.SetStreamTagsParams
	18, // 67: v5api.BTrDB.Create:input_type -> v5api.CreateParams
	23, // 68: v5api.BTrDB.ListCollections:input_type -> v5api.ListCollectionsParams
	25, // 69: v5api.BTrDB.LookupStreams:input_type -> v5api.LookupStreamsParams
	27, // 70: v5api.BTrDB.Nearest:input_type -> v5api.NearestParams
	29, // 71: v5api.BTrDB.Changes:input_type -> v5api.ChangesParams
	32, // 72: v5api.BTrDB.Insert:input_type -> v5api.InsertParams
	34, // 73: v5api.BTrDB.Delete:input_type -> v5api.DeleteParams
	36, // 74: v5api.BTrDB.Info:input_type -> v5api.InfoParams
	39, // 75: v5api.BTrDB.FaultInject:input_type -> v5api.FaultInjectParams
	41, // 76: v5api.BTrDB.Flush:input_type -> v5api.FlushParams
	43, // 77: v5api.BTrDB.Obliterate:input_type -> v5api.ObliterateParams
	20, // 78: v5api.BTrDB.GetMetadataUsage:input_type -> v5api.MetadataUsageParams
	55, // 79: v5api.BTrDB.GenerateCSV:input_type -> v5api.GenerateCSVParams
	57, // 80: v5api.BTrDB.SQLQuery:input_type -> v5api.SQLQueryParams
	65, // 81: v5api.BTrDB.Subscribe:input_type -> v5api.SubscriptionParams
	60, // 82: v5api.BTrDB.SetCompactionConfig:input_type -> v5api.SetCompactionConfigParams
	62, // 83: v5api.BTrDB.GetCompactionConfig:input_type -> v5api.GetCompactionConfigParams
	3,  // 84: v5api.BTrDB.RawValues:output_type -> v5api.RawValuesResponse
	5,  // 85: v5api.BTrDB.MultiRawValues:output_type -> v5api.MultiRawValuesResponse
	8,  // 86: v5api.BTrDB.AlignedWindows:output_type -> v5api.AlignedWindowsResponse
	10, // 87: v5api.BTrDB.Windows:output_type -> v5api.WindowsResponse
	12, // 88: v5api.BTrDB.StreamInfo:output_type -> v5api.StreamInfoResponse
	15, // 89: v5api.BTrDB.SetStreamAnnotations:output_type -> v5api.SetStreamAnnotationsResponse
	17, // 90: v5api.BTrDB.SetStreamTags:output_type -> v5api.SetStreamTagsResponse
	19, // 91: v5api.BTrDB.Create:output_type -> v5api.CreateResponse
	24, // 92: v5api.BTrDB.ListCollections:output_type -> v5api.ListCollectionsResponse
	26, // 93: v5api.BTrDB.LookupStreams:output_type -> v5api.LookupStreamsResponse
	28, // 94: v5api.BTrDB.Nearest:output_type -> v5api.NearestResponse
	30, // 95: v5api.BTrDB.Changes:output_type -> v5api.ChangesResponse
	33, // 96: v5api.BTrDB.Insert:output_type -> v5api.InsertResponse
	35, // 97: v5api.BTrDB.Delete:output_type -> v5api.DeleteResponse
	37, // 98: v5api.BTrDB.Info:output_type -> v5api.InfoResponse
	40, // 99: v5api.BTrDB.FaultInject:output_type -> v5api.FaultInjectResponse
	42, // 100: v5api.BTrDB.Flush:output_type -> v5api.FlushResponse
	44, // 101: v5api.BTrDB.Obliterate:output_type -> v5api.ObliterateResponse
	21, // 102: v5api.BTrDB.GetMetadataUsage:output_type -> v5api.MetadataUsageResponse
	56, // 103: v5api.BTrDB.GenerateCSV:output_type -> v5api.GenerateCSVResponse
	58, // 104: v5api.BTrDB.SQLQuery:output_type -> v5api.SQLQueryResponse
	66, // 105: v5api.BTrDB.Subscribe:output_type -> v5api.SubscriptionResp
	61, // 106: v5api.BTrDB.SetCompactionConfig:output_type -> v5api.SetCompactionConfigResponse
	63, // 107: v5api.BTrDB.GetCompactionConfig:output_type -> v5api.GetCompactionConfigResponse
	84, // [84:108] is the sub-list for method output_type
	60, // [60:84] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_btrdb_proto_init() }
func file_btrdb_proto_init() {
	if File_btrdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_btrdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawValuesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiRawValuesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiRawValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawPointVec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlignedWindowsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlignedWindowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindowsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamInfoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStreamAnnotationsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStreamAnnotationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStreamTagsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStreamTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataUsageParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCollectionsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupStreamsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupStreamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaultInjectParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaultInjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObliterateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObliterateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangedRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyOptValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamCSVConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCSVParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCSVResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLQueryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCompactionConfigParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCompactionConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompactionConfigParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompactionConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReducedResolutionRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btrdb_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_btrdb_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*RoundSpec_Bits)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_btrdb_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_btrdb_proto_goTypes,
		DependencyIndexes: file_btrdb_proto_depIdxs,
		EnumInfos:         file_btrdb_proto_enumTypes,
		MessageInfos:      file_btrdb_proto_msgTypes,
	}.Build()
	File_btrdb_proto = out.File
	file_btrdb_proto_rawDesc = nil
	file_btrdb_proto_goTypes = nil
	file_btrdb_proto_depIdxs = nil
}
